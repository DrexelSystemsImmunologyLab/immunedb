#!/usr/bin/env python2 -u
import argparse
import textwrap
import sys
import sldb.common.config as config
from sldb.importing.delimited import IMPORT_HEADERS

class FieldsAction(argparse.Action):
    def __call__(self, parser, namespace, values, option_string=None):
        print '\n'.join(textwrap.wrap(
           'Required fields must be specified in the header for every '
           'sequence, or as a default.  Failure to do so will cause '
           'an error.'
        , 80)) + '\n'
        ml = max(map(lambda e: len(e), IMPORT_HEADERS.keys()))
        for k in sorted(IMPORT_HEADERS.keys()):
            print '  {}: {}'.format(k.ljust(ml), IMPORT_HEADERS[k])
        parser.exit()

if __name__ == '__main__':
    parser = config.get_base_arg_parser(
        'Imports a delimited file.  If a field is not specified by any flag '
        'it is assumed to have the same header in the imported file(s).  If '
        'specified with a --map-FIELD flag, the header field specified will '
        'be used.  If specified with a --def-FIELD, the literal value will be '
        'used.  Specifying a field with both methods is valid, and the value '
        'will first be looked up with the header specified with --map-FIELD '
        'and will fall back to the default value if not specified.  Valid '
        'fields.')
    parser.add_argument('files', help='Files to import')

    parser.add_argument('--defaults', help='Default values for fields. '
                        'Format as FIELD1=VALUE1 FIELD2=VALUE2')
    parser.add_argument('--mappings', help='Mappings for field. '
                        'Format as FIELD1=HEADER2 FIELD2=HEADER2')
    parser.add_argument('--print-fields', action=FieldsAction, nargs=0,
                        help='Displays all valid fields. Does not process '
                        'any input.')
    args = parser.parse_args()

    #session = config.init_db(args.master_db_config, args.data_db_config)

    #from sldb.importing.delimited import run_delimited_import
    #sys.exit(run_delimited_import(session, args))
